import {
    FETCH_MARKERS_START,
    FETCH_MARKERS_SUCCESS,
    FETCH_MARKERS_FAILURE,
    LOAD_MORE_MARKERS_START,
    LOAD_MORE_MARKERS_SUCCESS,
    LOAD_MORE_MARKERS_FAILURE,
    FETCH_MARKER_BY_ID_START,
    FETCH_MARKER_BY_ID_SUCCESS,
    FETCH_MARKER_BY_ID_FAILURE,
    ADD_MARKER_TO_BASKET,
    SEARCH_MARKER,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_FAILURE,
    REMOVE_MARKER_FROM_BASKET,
    CLEAN_BASKET
} from 'actionTypes'
import {getRenderedMarkersLength} from 'selectors'
import {
    fetchMarkers as fetchMarkersApi,
    loadMoreMarkers as loadMoreMarkersApi,
    fetchMarkerById as fetchMarkerByIdApi,
    fetchCategories as fetchCategoriesApi
} from 'api'

export const fetchMarkers = () => async dispatch => {
  dispatch({type: FETCH_MARKERS_START})

  try {
    const markers = await fetchMarkersApi()
    dispatch({
      type: FETCH_MARKERS_SUCCESS,
      payload: markers
    })
  } catch (err) {
    dispatch({
      type: FETCH_MARKERS_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const loadMoreMarkers = () => async (dispatch, getState) => {
  const offset = getRenderedMarkersLength(getState())

  dispatch({type: LOAD_MORE_MARKERS_START})

  try {
    const markers = await loadMoreMarkersApi({offset})
    dispatch({
      type: LOAD_MORE_MARKERS_SUCCESS,
      payload: markers
    })
  } catch (err) {
    dispatch({
      type: LOAD_MORE_MARKERS_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const fetchMarkerById = (id) => async dispatch => {
  dispatch({type: FETCH_MARKER_BY_ID_START})

  try {
    const marker = await fetchMarkerByIdApi(id)
    dispatch({
      type: FETCH_MARKER_BY_ID_SUCCESS,
      payload: marker
    })
  } catch (err) {
    dispatch({
      type: FETCH_MARKER_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const addMarkerToBasket = id => dispatch => {
  dispatch({
    type: ADD_MARKER_TO_BASKET,
    payload: id
  })
}

export const searchMarker = text => dispatch => {
  dispatch({
      type: SEARCH_MARKER,
      payload: text
  })
}

export const fetchCategories = () => async dispatch => {
    dispatch({type: FETCH_CATEGORIES_START})

    try {
        const categories = await fetchCategoriesApi()
        dispatch({
            type: FETCH_CATEGORIES_SUCCESS,
            payload: categories
        })
    } catch (err) {
        dispatch({
            type: FETCH_CATEGORIES_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const removeMarkerFromBasket = id => dispatch => {
    dispatch({
        type: REMOVE_MARKER_FROM_BASKET,
        payload: id
    })
}

export const cleanBasket = () => dispatch => {
    dispatch({
        type: CLEAN_BASKET
    })
}

export const basketCheckout = markers => () => {
    alert(JSON.stringify(markers))
}